# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 1  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],
#   [-1, 1, CBAM, [1024]], #9
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 17], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)
#   [-1, 1, CBAM, [256]],

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)
#   [-1, 1, CBAM, [512]],


   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)
#   [-1, 1, CBAM, [1024]],

#   [[17, 20, 23], 1, Decoupled_Detect, [nc, anchors]],  # Detect(P3, P4, P5)
#  ]
   [ [ 21, 24, 27 ], 1, Decoupled_Detect, [ nc, anchors ] ],  # Detect(P3, P4, P5)
  ]
#RuntimeError:
#  Given groups=1, weight of size [256, 256, 1, 1],
#  expected input[1, 128, 32, 32] to have 256 channels,
#  but got 128 channels instead

#   [ [ 19, 23, 27 ], 1, Decoupled_Detect, [ nc, anchors ] ],  # Detect(P3, P4, P5)
#  ]


#                 from  n    params  module                                  arguments
#  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
#  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
#  2                -1  1     18816  models.common.C3                        [64, 64, 1]
#  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
#  4                -1  1    115712  models.common.C3                        [128, 128, 2]
#  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
#  6                -1  1    625152  models.common.C3                        [256, 256, 3]
#  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
#  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
#  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
# 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
# 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
# 12           [-1, 6]  1         0  models.common.Concat                    [1]
# 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
# 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
# 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
# 16           [-1, 4]  1         0  models.common.Concat                    [1]
# 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]11111111111111111111
# 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
# 19          [-1, 14]  1         0  models.common.Concat                    [1]
# 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]111111111111111111111
# 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
# 22          [-1, 10]  1         0  models.common.Concat                    [1]
# 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]111111111111111111111
# 24      [17, 20, 23]  1     48546  models.yolo.Detect                      [1, [[10, 13, 16, 30, 33, 23], [
#30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]

#RuntimeError: Given groups=1, weight of size [256, 256, 1, 1], expected input[1, 128, 32, 32] to have 256 ch
#annels, but got 128 channels instead

#RuntimeError: Given groups=1, weight of size [54, 256, 1, 1], expected input[1, 128, 32, 32] to have 256 cha
#nnels, but got 128 channels instead


#                 from  n    params  module                                  arguments
#  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
#  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
#  2                -1  1     18816  models.common.C3                        [64, 64, 1]
#  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
#  4                -1  1    115712  models.common.C3                        [128, 128, 2]
#  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
#  6                -1  1    625152  models.common.C3                        [256, 256, 3]
#  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
#  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
#  9                -1  1     33411  models.Models.research.CBAM             [512, 512]
# 10                -1  1    656896  models.common.SPPF                      [512, 512, 5]
# 11                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
# 12                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
# 13           [-1, 6]  1         0  models.common.Concat                    [1]
# 14                -1  1    361984  models.common.C3                        [512, 256, 1, False]
# 15                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
# 16                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
# 17           [-1, 4]  1         0  models.common.Concat                    [1]
# 18                -1  1     90880  models.common.C3                        [256, 128, 1, False]
# 19                -1  1      2283  models.Models.research.CBAM             [128, 128]11111111111111111111111
# 20                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
# 21          [-1, 14]  1         0  models.common.Concat                    [1]
# 22                -1  1    329216  models.common.C3                        [384, 256, 1, False]
# 23                -1  1      8563  models.Models.research.CBAM             [256, 256]111111111111111111111
# 24                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
# 25          [-1, 10]  1         0  models.common.Concat                    [1]
# 26                -1  1   1313792  models.common.C3                        [768, 512, 1, False]
# 27                -1  1     33411  models.Models.research.CBAM             [512, 512]111111111111111111111111
# 28      [19, 23, 27]  1   5488004  models.Detect.MuitlHead2.ASFF_Detect    [1, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116,
#90, 156, 198, 373, 326]], [128, 256, 512]]
